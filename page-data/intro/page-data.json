{
    "componentChunkName": "component---src-templates-mdx-pages-js",
    "path": "/intro/",
    "result": {"data":{"mdx":{"id":"5f02335b-d442-5e18-be9f-00a07ba8fdda","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"description\": \"Introduction Ã  JAX-RS\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar ScrollableImage = makeShortcode(\"ScrollableImage\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Introduction\"), mdx(\"p\", null, \"Voici les sujets trait\\xE9s dans cette introduction :\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/baja/intro#section1\"\n  }, \"Supports de cours\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/baja/intro#section2\"\n  }, \"Introduction aux technologies d'un backend Java\"))), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"section1\"\n  }), \"1. Supports de cours\"), mdx(\"p\", null, \"Tous les supports de cours se trouvent :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sur ce site pour l'explication des concepts et les \\xE9nonc\\xE9s des exercices associ\\xE9s ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dans le \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/baja-demos\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"repo des d\\xE9mos\")), \" ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dans le \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/e-vinci/baja-exercises\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"repo des exercices\")), \".\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"section2\"\n  }), \"2. Introduction aux technologies d'un backend Java\"), mdx(\"h2\", null, \"2.1 Contexte g\\xE9n\\xE9ral\"), mdx(\"br\", null), mdx(ScrollableImage, {\n    name: \"backends.jpg\",\n    minWidth: \"600px\",\n    maxWidth: \"800px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"br\", null), mdx(\"p\", null, \"La \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Java SE Platform\"), \" est g\\xE9n\\xE9ralement destin\\xE9e aux applications pour poste de travail.\"), mdx(\"p\", null, \"La \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jakarta EE Platform\"), \" \\xE9tend la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Java SE Platform\"), \" afin de faciliter le d\\xE9veloppement d\\u2019applications d\\u2019entreprise pour architecture distribu\\xE9e.\"), mdx(\"br\", null), mdx(\"h2\", null, \"2.2\\tJakarta EE\"), mdx(\"p\", null, \"La derni\\xE8re version officielle de la sp\\xE9cification de Jakarta EE,\\ndisponible via ce \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jakarta.ee/specifications/platform/10/jakarta-platform-spec-10.0\"\n  }, \"lien\"), \",\\nfournit le diagramme suivant :\"), mdx(ScrollableImage, {\n    name: \"jakarta-archi.svg\",\n    minWidth: \"600px\",\n    maxWidth: \"800px\",\n    mdxType: \"ScrollableImage\"\n  }), mdx(\"br\", null), mdx(\"p\", null, \"Cette plateforme fournit un ensemble de sp\\xE9cifications permettant notamment l\\u2019injection de d\\xE9pendance (CDI & DI),\\nla gestion de WebSocket, de Web Services (SOAP ou REST), le processing et binding de JSON \\u2026\"), mdx(\"br\", null), mdx(\"p\", null, \"Les quatre types de composants d\\u2019applications qui doivent \\xEAtre support\\xE9s par un produit \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jakarta EE\"), \" et qui sont repr\\xE9sent\\xE9s ci-dessus sont :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Application Client Container\"), \" : ce sont typiquement des GUI qui s\\u2019ex\\xE9cutent sur un poste de travail (desktop).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Web Container\"), \" : ils r\\xE9pondent aux requ\\xEAtes http de clients Web ; typiquement, des servlets, des filtres et des \\xE9couteur d\\u2019\\xE9v\\xE9nements web s\\u2019ex\\xE9cutent dans des web containers, afin de g\\xE9n\\xE9rer de l\\u2019HTML, du JSON, de l\\u2019XML\\u2026\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Entreprise Beans Container\"), \" : ex\\xE9cution de composants dans un environnement supportant les transactions.\")), mdx(\"br\", null), mdx(\"p\", null, \"Pour ce cours, nous allons voir comment r\\xE9pondre aux requ\\xEAtes http de clients en nous int\\xE9ressant aux web containers.\"), mdx(\"br\", null), mdx(\"h2\", null, \"2.3\\tWeb Containers\"), mdx(\"p\", null, \"Un web container g\\xE8re les requ\\xEAtes vers des Servlets, des Jakarta Server Pages (JSP) ou autres types de fichiers incluant du code serveur.\\nIl g\\xE8re notamment le cycle de vie des servlets, mappant des URL vers une Servlet particuli\\xE8re.\"), mdx(\"br\", null), mdx(\"p\", null, \"Il existe de nombreuses impl\\xE9mentations de Web Containers : Jetty, Apache Tomcat, GlassFish\\u2026\"), mdx(\"br\", null), mdx(\"p\", null, \"Chaque serveur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jakarta EE\"), \" poss\\xE8de un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web Container\"), \" + \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"EJB Container\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Dans ce cours, nous ne traiterons pas de Server Pages (JSP), qui permettent d\\u2019int\\xE9grer du code Java directement dans des pages HTML.\"), mdx(\"br\", null), mdx(\"p\", null, \"Nous n\\u2019allons pas non plus utiliser la notion de Servlet de mani\\xE8re directe.\\nNous allons utiliser un serveur http int\\xE9gr\\xE9 (embedded server) qui impl\\xE9mente toutes les fonctionnalit\\xE9s d\\u2019abstraction offertes par la Servlet specification.\"), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons donc utiliser une pile technologique nous permettant de cr\\xE9er des programmes http\\n\\xAB standalone \\xBB et l\\xE9gers qui peuvent \\xEAtre d\\xE9ploy\\xE9s tant sur la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Java SE platform\"), \" que sur la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jakarta EE platform\"), \".\\nNous cr\\xE9erons des web services en utilisant le pattern architectural REST.\"), mdx(\"br\", null), mdx(\"p\", null, \"Il existe de nombreuses autres architectures, mais celles-ci ne seront pas vues dans ce cours, comme par exemple : serveur http standalone, utilisation de Entreprise Java Beans\\u2026\"), mdx(\"br\", null), mdx(\"h2\", null, \"2.4\\tJakarta RESTful Web Services\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JAX-RS\"), \" = \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jakarta RESTful Web Services\"), \" (anciennement Java API for RESTful Web Services)\\nest une Jakarta EE API specification permettant de cr\\xE9er des web services selon\\nle pattern architectural REST.\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JAX-RS\"), \" offre notamment des annotations pour mapper des ressources web \\xE0 des POJOs\\n(\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Path\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Get\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Produces\"), \"\\u2026) et d\\u2019autres annotations pour les param\\xE8tres de m\\xE9thodes afin de retirer l\\u2019information de requ\\xEAtes (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@PathParam\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@QueryParam\"), \"\\u2026).\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POJO\"), \" = \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Plain Old Java Object\"), \". Un POJO est un objet ordinaire, il n\\u2019impl\\xE9mente pas une interface pr\\xE9d\\xE9finie ou il n\\u2019\\xE9tend pas une classe pr\\xE9d\\xE9finie d\\u2019une Java Platform.\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JavaBean\"), \" = un POJO qui est s\\xE9rialisable, qui a un constructeur sans argument, et qui permet d\\u2019acc\\xE9der aux propri\\xE9t\\xE9s via des getters et des setters.\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JAX-RX Specification\"), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jakarta.ee/specifications/restful-ws/3.1/jakarta-restful-ws-spec-3.1\"\n  }, \"https://jakarta.ee/specifications/restful-ws/3.1/jakarta-restful-ws-spec-3.1\")), mdx(\"br\", null), mdx(\"p\", null, \"L\\u2019impl\\xE9mentation de r\\xE9f\\xE9rence (de Sun) de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JAX-RS\"), \", c\\u2019est \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jersey\"), \", qui fait partie de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GlassFish\"), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey/\"\n  }, \"https://eclipse-ee4j.github.io/jersey/\")), mdx(\"p\", null, \"NB : Il existe d\\u2019autres impl\\xE9mentation de JAX-RX : Apache CXF, RESTEasy\\u2026\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour d\\xE9velopper vos futures RESTFul APIs en Java sous Jersey,\\nla meilleure documentation est le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jersey 3.1.5 User Guide\"), \" : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest31x/index.html\"\n  }, \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest31x/index.html\")), mdx(\"br\", null), mdx(\"h2\", null, \"2.5\\tPile technologie pour les web services\"), mdx(\"p\", null, \"Pour cr\\xE9er des web services standalone pouvant \\xEAtre ex\\xE9cut\\xE9 sur une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Java SE platform\"), \", nous allons utiliser :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Eclipse Jersey\"), \" (anciennement \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Glassfish Jersey\"), \") pour l\\u2019aspect annotations et la gestion des ressources, pour l\\u2019injection de d\\xE9pendances ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Le serveur http \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Grizzly\"), \" qui est construit sur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Java NIO\"), \" (Non-blocking IO, ou New IO permettant d\\u2019avoir plusieurs traitements en parall\\xE8le au sein d\\u2019un thread), qui offre un http container qui ex\\xE9cute des applications JAX-RS ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Jackson\"), \" pour la gestion du \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"JSON\"), \" ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Java JWT\"), \" pour la gestion de l\\u2019authentification et de l\\u2019autorisation via des token ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"jBCrypt\"), \" pour la gestion des passwords (hashing).\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"intro","frontmatter":{"title":"Introduction","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"Introduction Ã  JAX-RS","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":null,"base":"favicon.ico"}},{"node":{"childImageSharp":null,"base":"favicon.svg"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#683898","images":{"fallback":{"src":"/baja/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/baja/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/baja/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/baja/static/c55d0def10b42157d9b6236bf3d72afb/cdc33/jakarta-logo.png","srcSet":"/baja/static/c55d0def10b42157d9b6236bf3d72afb/cdc33/jakarta-logo.png 500w","sizes":"100vw"},"sources":[{"srcSet":"/baja/static/c55d0def10b42157d9b6236bf3d72afb/ecd43/jakarta-logo.webp 500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3}},"base":"jakarta-logo.png"}},{"node":{"childImageSharp":null,"base":"jakarta-logo.svg"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/baja/static/a9d7114ba2764dabfc41a67a6635c992/cd97c/backends.jpg","srcSet":"/baja/static/a9d7114ba2764dabfc41a67a6635c992/cd97c/backends.jpg 686w","sizes":"100vw"},"sources":[{"srcSet":"/baja/static/a9d7114ba2764dabfc41a67a6635c992/86e9b/backends.webp 686w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6107871720116618}},"base":"backends.jpg"}},{"node":{"childImageSharp":null,"base":"jakarta-archi.svg"}}]}},"pageContext":{"slug":"/intro/"}},
    "staticQueryHashes": ["1858702104","2153498299","3028011774","3458129946"]}